{
    "system_prompt_node1": "You are required to generate domain names based on a given topic. For every request, you will be provided with a topic, and your task is to generate domain names that include the word 'DOMAIN' before each suggested name. Below are examples of how the input request and your response should look like:\nExample:\nRequest: Please help me generate 3 domain names about \"cooking\" with tld .com\nResponse:\nDOMAIN: TastyHub.com\nDOMAIN: RecipeRush.com\nDOMAIN: TheCookingCoach.com",
    "user_prompt_node1": "Please help me generate {number} domains related to \"{topic}\" with tld \"{tld}\" and please do not generate domain that already exisit",
    "info": "- **domain**: Identify all domain names mentioned in the text and return them as a list. ",
    "review_template1": "For the given text, extract the following information:\n\n- **domain**: Identify all domain names mentioned in the text and return them as a list. \n\n**Text To Analyze:**\n{text}\n**End Of Text**\nhere is a example output:\n```\n{{\n\t\"domain\": string  //     Extract the domain names mentioned in the text.\n    For example, if the text contains \"The domains are hello.com and byebye.net\",\n    the output should be a list: [\"hello.com\", \"byebye.net\"].\n\n}}\n```\nPlease output the result strictly in valid JSON format, without any additional text, commentary, or explanation.\n\n",
    "format_instructions": "here is a example output:\n```\n{\n\t\"domain\": string  //     Extract the domain names mentioned in the text.\n    For example, if the text contains \"The domains are hello.com and byebye.net\",\n    the output should be a list: [\"hello.com\", \"byebye.net\"].\n\n}\n```\n\n",
    "system_parse_domain_correct": "\nHere\u2019s a revised version of your prompt that improves clarity and grammar:\n\nYour task is to transform input data into a specific format. Specifically, fix outputs that do not conform to the required structure:\n```\n{\n\t\"domain\": [string]\n}\n```\nExample\n\nInput:\n```\n[\n  \"ChallengeAccepted.com\",\n  \"ChallengeHub.com\",\n  \"TheChallengeCenter.com\"\n]\n```\nProblem:\nThe input is missing the \"domain\" key.\n\nCorrect Output:\n```\n{\n\t\"domain\": [\n\t\t\"ChallengeAccepted.com\",\n\t\t\"ChallengeHub.com\",\n\t\t\"TheChallengeCenter.com\"\n\t]\n}\n```\nEnsure all outputs follow the specified format and please do not need any additional comment.\n",
    "system_domain_generate_decision": "You are tasked with inspecting the output of another model to determine if it contains a domain.\nFollow these steps to arrive at your answer:\n1.Analyze the input step by step to check if it contains any pattern that resembles a domain.\n2.Conclude by determining whether the input contains a domain.\nYour final response must be formatted as follows:\n\nReasoning: (Whether there is a valid domain inside the text)\nAnswer: [TRUE, FALSE]\nfor example:\ninput:\nthe text you need to analyze is \"\nDOMAIN: TastyHub.com\nDOMAIN: RecipeRush.com\nDOMAIN: TheCookingCoach.com\"\nyour response should be: \nResoning: there are domain which fit the format of a standard domain inside the text. \nSo the Answer should be: TRUE\nor input:\nthe text you need to analyze is \"hello, how can i help you today?\"\nyour response should be: \nResaoning: there is no domain which fit the format of a standard domain inside the text.\nSo the Answer should be: FALSE\n",
    "user_domain_generate_decision": "the text you need to analyze is \"{text}\"\n"
}